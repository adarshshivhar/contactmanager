{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","Header","branding","href","TextInputGroup","label","placeholder","onChange","error","htmlFor","classname","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","About","PageNotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.472809c5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact )\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    state = {\r\n            contacts : [],\r\n            dispatch: action => {\r\n                this.setState(state => reducer(state, action))\r\n            }\r\n        \r\n        };\r\n\r\n        async componentDidMount() {\r\n            const res = await axios\r\n            .get('https://jsonplaceholder.typicode.com/users');\r\n            \r\n            this.setState({ contacts: res.data });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Context.Provider value={ this.state }>\r\n                 {this.props.children}\r\n                </Context.Provider>\r\n            )\r\n        }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n\r\n    onShowClick = (e) => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        })\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        await axios\r\n          .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n          \r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                      <div className=\"card card-body mb-3\">\r\n                        <h4>\r\n                          {name}\r\n                          <i\r\n                            onClick={this.onShowClick}\r\n                            className=\"fas fa-sort-down\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                          />\r\n                          <i\r\n                            onClick={this.onDeleteClick.bind(\r\n                              this,\r\n                              id,\r\n                              dispatch\r\n                            )}\r\n                            className=\"fas fa-times\"\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              float: \"right\",\r\n                              color: \"red\",\r\n                            }}\r\n                          />\r\n\r\n                          <Link to={`contact/edit/${id}`}>\r\n                            <i \r\n                              className=\"fas fa-pencil-alt\"\r\n                              style={{\r\n                                cursor: 'pointer',\r\n                                float: 'right',\r\n                                color: 'black',\r\n                                marginRight: '1rem'\r\n                              }}\r\n                            />\r\n                          </Link>\r\n                        </h4>\r\n                        {showContactInfo ? (\r\n                          <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">Email: {email}</li>\r\n                            <li className=\"list-group-item\">Phone: {phone}</li>\r\n                          </ul>\r\n                        ) : null}\r\n                      </div>\r\n                    );\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                      <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                          <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map((contact) => (\r\n                          <Contact key={contact.id} contact={contact} />\r\n                        ))}\r\n                      </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                 <a className=\"navbar-brand\" href=\"/\">\r\n                {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home \r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\"> \r\n                                <i className=\"fas fa-plus\"></i> Add \r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About \r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react'\r\nimport classname from 'classname';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <input\r\n          type={type}\r\n          name={name}\r\n          className={classname(\"form-control form-control-lg\", {\r\n            \"is-invalid\": error,\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check Error\r\n        if(name === '') {\r\n          this.setState({\r\n            errors: {\r\n              name: 'Name is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        if(email === '') {\r\n          this.setState({\r\n            errors: {\r\n              email: 'Email is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        if(phone === '') {\r\n          this.setState({\r\n            errors: {\r\n              phone: 'Phone is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        const newContact = {\r\n          name,\r\n          email,\r\n          phone,\r\n        };\r\n\r\n        const res = await axios\r\n          .post('https://jsonplaceholder.typicode.com/users',newContact);\r\n\r\n        dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n        //CLEAR STATE \r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n          <Consumer>\r\n            {\r\n              value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                  <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Add Contact</div>\r\n                    <div className=\"card-body\">\r\n                      <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          placeholder=\"Enter Name\"\r\n                          type=\"text\"\r\n                          value={name}\r\n                          onChange={this.onChange}\r\n                          error={errors.name}\r\n                        />\r\n\r\n                        <TextInputGroup\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Enter Email\"\r\n                          type=\"email\"\r\n                          value={email}\r\n                          onChange={this.onChange}\r\n                          error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup\r\n                          label=\"Phone\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter Phone\"\r\n                          type=\"text\"\r\n                          value={phone}\r\n                          onChange={this.onChange}\r\n                          error={errors.phone}\r\n                        />\r\n                        <input\r\n                          type=\"submit\"\r\n                          value=\"Add Contact\"\r\n                          className=\"btn btn-block btn-light\"\r\n                        />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n          </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        //Check Error\r\n        if(name === '') {\r\n          this.setState({\r\n            errors: {\r\n              name: 'Name is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        if(email === '') {\r\n          this.setState({\r\n            errors: {\r\n              email: 'Email is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        if(phone === '') {\r\n          this.setState({\r\n            errors: {\r\n              phone: 'Phone is required'\r\n            }\r\n          })  \r\n          return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n          `https://jsonplaceholder.typicode.com/users/${id}`, updateContact\r\n        );\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n        \r\n        //CLEAR STATE \r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          phone: '',\r\n          errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n          <Consumer>\r\n            {\r\n              value => {\r\n                const { dispatch } = value;\r\n                return (\r\n                  <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">Edit Contact</div>\r\n                    <div className=\"card-body\">\r\n                      <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                        <TextInputGroup\r\n                          label=\"Name\"\r\n                          name=\"name\"\r\n                          placeholder=\"Enter Name\"\r\n                          type=\"text\"\r\n                          value={name}\r\n                          onChange={this.onChange}\r\n                          error={errors.name}\r\n                        />\r\n\r\n                        <TextInputGroup\r\n                          label=\"Email\"\r\n                          name=\"email\"\r\n                          placeholder=\"Enter Email\"\r\n                          type=\"email\"\r\n                          value={email}\r\n                          onChange={this.onChange}\r\n                          error={errors.email}\r\n                        />\r\n\r\n                        <TextInputGroup\r\n                          label=\"Phone\"\r\n                          name=\"phone\"\r\n                          placeholder=\"Enter Phone\"\r\n                          type=\"text\"\r\n                          value={phone}\r\n                          onChange={this.onChange}\r\n                          error={errors.phone}\r\n                        />\r\n                        <input\r\n                          type=\"submit\"\r\n                          value=\"Update Contact\"\r\n                          className=\"btn btn-block btn-light\"\r\n                        />\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            }\r\n          </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nconst About = (props) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  About;","import React from 'react'\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound","import React from 'react';\nimport  Contacts  from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from './components/pages/About';\n\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport PageNotFound from './components/pages/PageNotFound';\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}